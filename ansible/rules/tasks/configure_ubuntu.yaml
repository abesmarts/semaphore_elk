---
- name: Setup Ubuntu System for Monitoring and Bot Logs
  hosts: ubuntu_vms
  become: true
  gather_facts: true
  
  vars:
    ubuntu_packages:
      - python3
      - python3-pip
      - python3-venv
      - curl
      - wget
      - git
      - htop
      - vim
      - unzip
      - software-properties-common
      - apt-transport-https
      - ca-certificates
      - gnupg
      - lsb-release
      - sudo
      - openssh-server
    
    python_packages:
      - psutil
      - requests
      - selenium
      - schedule

  tasks:
    - name: Update apt package cache
      apt:
        update_cache: true
        cache_valid_time: 3600
      tags: ['system']
    
    - name: Install system packages
      apt:
        name: "{{ ubuntu_packages }}"
        state: present
        update_cache: true
      tags: ['system']

    - name: Ensure SSH service is running
      service:
        name: ssh
        state: started
        enabled: yes
      tags: ['ssh']
    
    - name: Install Python packages
      pip:
        name: "{{ python_packages }}"
        state: present
        executable: pip3
      tags: ['python']

    - name: Create /opt/monitoring directories
      file:
        path: "{{ item }}"
        state: directory
        owner: monitor
        group: monitor
        mode: '0755'
      loop:
        - /opt/monitoring/scripts
        - /opt/monitoring/venv
      tags: ['directories']

    - name: Create monitoring user
      user:
        name: monitor
        comment: "System Monitoring User"
        shell: /bin/bash
        create_home: true
        home: /home/monitor
      tags: ['users']

    - name: Copy python_scripts to VM
      copy:
        src: ../python_scripts/
        dest: /opt/monitoring/scripts/
        owner: monitor
        group: monitor
        mode: '0755'
      tags: ['scripts']

    - name: Create Python virtual environment
      command: python3 -m venv /opt/monitoring/venv
      args: 
        creates: /opt/monitoring/venv/bin/activate
      become: true

    - name: Install required Python packages in venv
      pip:
        requirements: /opt/monitoring/scripts/requirements.txt
        virtualenv: /opt/monitoring/venv
        virtualenv_python: python3
      become: true

    - name: Create log directories
      file:
        path: "{{ item }}"
        state: directory
        owner: monitor
        group: monitor
        mode: '0755'
      loop:
        - /var/log/monitoring
        - /var/log/bot_logs
      tags: ['directories']

    - name: Ensure system monitor JSON log exists
      file:
        path: /var/log/system_monitor.json
        state: touch
        mode: '0644'
        owner: monitor
        group: monitor
      tags: ['logging']

    - name: Ensure bot log file exists
      file:
        path: /var/log/bot_logger.log
        state: touch
        mode: '0644'
        owner: monitor
        group: monitor
      tags: ['logging']

    - name: Set up log rotation for system monitor logs
      copy:
        content: |
          /var/log/system_monitor.json {
              daily
              missingok
              rotate 7
              compress
              delaycompress
              notifempty
              copytruncate
          }
        dest: /etc/logrotate.d/system_monitor
        mode: '0644'
      tags: ['logging']

    - name: Set up log rotation for bot logs
      copy:
        content: |
          /var/log/bot_logger.log {
              daily
              missingok
              rotate 14
              compress
              delaycompress
              notifempty
              copytruncate
          }
        dest: /etc/logrotate.d/bot_logger
        mode: '0644'
      tags: ['logging']
    
    - name: Configure timezone
      timezone:
        name: "{{ ansible_timezone | default('UTC') }}"
      tags: ['system']
    
    - name: Enable and start systemd-timesyncd
      systemd:
        name: systemd-timesyncd
        enabled: true
        state: started
      tags: ['system']

    - name: Create systemd service for system monitoring
      copy:
        content: |
          [Unit]
          Description=System Monitoring Service
          After=network.target
          
          [Service]
          Type=simple
          User=monitor
          WorkingDirectory=/opt/monitoring/scripts
          ExecStart=/opt/monitoring/venv/bin/python /opt/monitoring/scripts/system-monitor.py
          Restart=always
          RestartSec=60
          Environment=LOGSTASH_HOST={{ logstash_host | default('localhost') }}
          Environment=LOGSTASH_PORT={{ logstash_port | default('5000') }}
          
          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/system-monitor.service
        mode: '0644'
      notify: reload systemd
      tags: ['services']

    - name: Display system information
      debug:
        msg: |
          Ubuntu system setup completed successfully!
          OS: {{ ansible_distribution }} {{ ansible_distribution_version }}
          Architecture: {{ ansible_architecture }}
          Python version: {{ ansible_python_version }}
          Hostname: {{ ansible_hostname }}
          IP Address: {{ ansible_default_ipv4.address }}
      tags: ['info']

  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: true
